{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","src","img","to","name","Message","selfMessage","OtherMessage","flexWidth","message","maxLenght","maxLenghtCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","FormControlCreator","placeholder","validate","required","Dialogs","dialogsElements","state","dialogs","map","d","key","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessageCont","newMessageBody","compose","withAuthRedirectComponent","connect","DialogsPage","auth","dispatch","addMesActionCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,YAAc,6BAA6B,aAAe,8BAA8B,UAAY,6B,+FCY9RC,EAVI,SAACC,GACnB,IAAMC,EAAO,YAAcD,EAAME,GAEjC,OACC,yBAAKC,UAAS,UAAKC,IAAEC,SACpB,yBAAKC,IAAKN,EAAMO,MAChB,kBAAC,IAAD,CAASC,GAAIP,GAAOD,EAAMS,QCDdC,EANC,SAACV,GAEhB,OACC,yBAAKG,UAAS,UAFD,IAEOH,EAAME,GAAeE,IAAEO,YAAYP,IAAEQ,aAA3C,aAA4DR,IAAES,YAAcb,EAAMc,U,0CCG5FC,EAAYC,YAAiB,IAa7BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAZL,SAAClB,GAEpB,OAAQ,0BAAMoB,SAAUpB,EAAMqB,cAC1B,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,YAAmB,YAAaf,KAAM,iBAAkBgB,YAAY,oBAAoBC,SAAU,CAACC,IAASZ,MAElI,6BACI,6CAiCGa,EA1BC,SAAC5B,GAEb,IAAM6B,EAAkB7B,EAAM8B,MAAMC,QAAQC,KAAI,SAACC,GAAD,OACxC,kBAAC,EAAD,CAAYxB,KAAMwB,EAAExB,KAAMyB,IAAKD,EAAE/B,GAAIA,GAAI+B,EAAE/B,GAAIK,IAAK0B,EAAE1B,SAC1D4B,EAAmBnC,EAAM8B,MAAMM,SAASJ,KAAI,SAACK,GAAD,OAAO,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAEnC,GAAIA,GAAImC,EAAEnC,QACrG,IAAKF,EAAMsC,OACP,OAAO,kBAAC,IAAD,CAAU9B,GAAI,WAMzB,OACI,yBAAKL,UAAWC,IAAE2B,SACd,yBAAK5B,UAAWC,IAAEmC,cACbV,GAEL,yBAAK1B,UAAWC,IAAEgC,UACd,6BAAMD,GACN,kBAAClB,EAAD,CAAqBG,SAXX,SAACoB,GACnBxC,EAAMyC,gBAAgBD,EAAOE,sB,wBCTtBC,sBACXC,IACAC,aAhBoB,SAACf,GACrB,MAAO,CACHA,MAAOA,EAAMgB,YACbR,OAAQR,EAAMiB,KAAKT,WAGA,SAACU,GACxB,MAAO,CACHP,gBAAgB,SAACC,GACbM,EAASC,YAAoBP,SAK1BC,CAGbf","file":"static/js/4.911985e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1umMi\",\"dialogsItems\":\"Dialogs_dialogsItems__1JJLh\",\"dialog\":\"Dialogs_dialog__3xpjf\",\"active\":\"Dialogs_active__1azZQ\",\"messages\":\"Dialogs_messages__2pfYa\",\"selfMessage\":\"Dialogs_selfMessage__3Zv7E\",\"OtherMessage\":\"Dialogs_OtherMessage__UjEXE\",\"flexWidth\":\"Dialogs_flexWidth__1JdNV\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';//styles\r\nimport {NavLink} from 'react-router-dom';\r\nconst DialogItem = (props)=> {\r\n\tconst path = \"/dialogs/\" + props.id;\r\n\r\n\treturn (\r\n\t\t<div className={`${s.dialog}`}>\r\n\t\t\t<img src={props.img}/>\r\n\t\t\t<NavLink to={path}>{props.name}</NavLink>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css';//styles\r\nconst Message = (props)=>{\r\n\tconst selfId= 1;\r\n\treturn(\r\n\t\t<div className={`${(props.id === selfId)?s.selfMessage:s.OtherMessage}  ${s.flexWidth}`}>{props.message}</div>\r\n\t)\r\n}\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';//styles\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {maxLenghtCreator, required} from \"../../utils/Validators/validators\";\r\nimport {FormControlCreator} from \"../common/FormsControls/formsControls\";\r\nconst maxLenght = maxLenghtCreator(20)\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={FormControlCreator('textarea')} name={\"newMessageBody\"} placeholder=\"Enter new message\" validate={[required,maxLenght]}/>\r\n        </div>\r\n        <div>\r\n            <button>Send</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    const dialogsElements = props.state.dialogs.map((d) => (\r\n            <DialogItem name={d.name} key={d.id} id={d.id} img={d.img}/>)),\r\n        messagesElements = props.state.messages.map((m) => <Message message={m.message} key={m.id} id={m.id}/>);\r\n    if (!props.isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    const addNewMessage = (values) => {\r\n        props.sendMessageCont(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageReduxForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMesActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirectComponent} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from 'redux';\r\n\r\n\r\n\r\nconst mapStateTiProps = (state)=>{\r\n    return {\r\n        state: state.DialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        sendMessageCont:(newMessageBody)=>{\r\n            dispatch(addMesActionCreator(newMessageBody));\r\n        },\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirectComponent,\r\n    connect(mapStateTiProps,mapDispatchToProps),\r\n)(Dialogs)\r\n\r\n/*\r\nconst AuthRedirectComponent = withAuthRedirectComponent(Dialogs)\r\n\r\nconst SuperDialogsContainer = connect(mapStateTiProps,mapDispatchToProps)(AuthRedirectComponent)\r\n\r\nexport default SuperDialogsContainer;*/\r\n\r\n\r\n\r\n/*\r\nconst DialogsContainer = (props)=>{\r\n    //debugger\r\n\r\n    return(\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store)=> {\r\n                    const state = store.getState(),\r\n                        changeMessageText = (text)=>{\r\n                            store.dispatch(updateMesActionCreator(text));\r\n                        },\r\n                        sendMessage = ()=>{\r\n                            store.dispatch(addMesActionCreator());\r\n                        };\r\n                    return <Dialogs\r\n                        updateMessageCont={changeMessageText}\r\n                        sendMessageCont={sendMessage}\r\n                        state={state.DialogsPage}\r\n                    />\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n\r\n    );\r\n}\r\n */"],"sourceRoot":""}